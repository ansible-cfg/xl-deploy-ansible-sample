---

- name: Define node in XLD
  xldeploy.py:
    id: "Infrastructure/{{ ansible_eth1.ipv4.address }}.vm"
    type: overthere.SshHost
    endpoint: "{{ xld_endpoint}}"
    properties:
      os: UNIX
      address: "{{ ansible_eth1.ipv4.address }}"
      username: vagrant
      password: vagrant
      connectionType: INTERACTIVE_SUDO
      sudoUsername: root
      stagingDirectoryPath: /tmp

- name : Define tomcat server in XLD
  xldeploy.py:
    id: "Infrastructure/{{ ansible_eth1.ipv4.address }}.vm/tomcat"
    type: tomcat.Server
    endpoint: "{{ xld_endpoint}}"
    properties:
      home: /var/lib/tomcat7
      startCommand: /etc/init.d/tomcat7 start
      stopCommand: /etc/init.d/tomcat7 stop
      startWaitTime: 10
      stopWaitTime: 0

- name : Define tomcat virtual host in XLD
  xldeploy.py:
    id: "Infrastructure/{{ ansible_eth1.ipv4.address }}.vm/tomcat/tomcat.vh"
    type: tomcat.VirtualHost
    endpoint: "{{ xld_endpoint}}"

- name: Define the smoke test runner
  xldeploy.py:
    id: "Infrastructure/{{ ansible_eth1.ipv4.address }}.vm/test-runner-{{ ansible_hostname }}"
    type: smoketest.Runner
    endpoint: "{{ xld_endpoint}}"

- name: Define the dictionary for the node
  xldeploy.py:
    id: "Environments/{{ ansible_hostname }}.dict"
    type: udm.Dictionary
    endpoint: "{{ xld_endpoint}}"
    properties:
      entries: {'log.RootLevel':'ERROR', 'log.FilePath':'/tmp/null', 'tomcat.port':'8080','tomcat.DataSource.username':'scott','tomcat.DataSource.password':'tiger','TITLE':'ANSIBLE', 'tomcat.DataSource.driverClassName':'com.mysql.jdbc.Driver','tomcat.DataSource.url':'jdbc:mysql://localhost/petclinic', 'tomcat.DataSource.context':'petclinic','tests2.ExecutedHttpRequestTest.url':'http://localhost:8080/petclinic/index.jsp'}
- name: Define the test environment
  xldeploy.py:
    id: Environments/ansible-tomcat-test
    type: udm.Environment
    endpoint: "{{ xld_endpoint}}"
    update_mode: add
    properties:
      members: ["Infrastructure/{{ ansible_eth1.ipv4.address }}.vm/tomcat/tomcat.vh", "Infrastructure/{{ ansible_eth1.ipv4.address }}.vm/tomcat","Infrastructure/{{ ansible_eth1.ipv4.address }}.vm", "Infrastructure/{{ ansible_eth1.ipv4.address }}.vm/test-runner-{{ ansible_hostname }}"]
      dictionaries: ["Environments/{{ ansible_hostname }}.dict"]


